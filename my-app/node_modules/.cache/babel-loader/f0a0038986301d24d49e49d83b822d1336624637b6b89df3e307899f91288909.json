{"ast":null,"code":"import axios from 'axios';\nexport default class Service {\n  static async getLostAnimals(data) {\n    try {\n      const posts = await axios.get('http://localhost:3001/posts/', {\n        params: data\n      });\n      return posts.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getFoundAnimals(data) {\n    try {\n      const posts = await axios.get('http://localhost:3001/posts/', {\n        params: data\n      });\n      return posts.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getPersonalData(id) {\n    const cookieValue = document.cookie.split(';').map(cookie => cookie.split('=')).find(_ref => {\n      let [key, value] = _ref;\n      return key.trim() === 'token';\n    });\n    const token = cookieValue ? cookieValue[1] : null;\n    try {\n      const config = {\n        headers: {\n          Authorization: `${token}`\n        }\n      };\n      const response = await axios.get('http://localhost:3001/users/' + id);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deleteUser(id) {\n    const cookieValue = document.cookie.split(';').map(cookie => cookie.split('=')).find(_ref2 => {\n      let [key, value] = _ref2;\n      return key.trim() === 'token';\n    });\n    const token = cookieValue ? cookieValue[1] : null;\n    try {\n      const config = {\n        headers: {\n          Authorization: `${token}`\n        }\n      };\n      const response = await axios.delete('http://localhost:3001/users/delete/' + id, config);\n      alert(response.data.message);\n      document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'; // Delete the token cookie\n      document.cookie = 'user_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return response.data.message;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async updatePersonalData(id, data) {\n    try {\n      const response = await axios.get('http://localhost:3001/users/update' + id, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getMyFavourites(id) {\n    try {\n      const favourites = await axios.get('http://localhost:3001/post_favourites/my-favourites/' + id);\n      return favourites.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getMyPosts(id) {\n    try {\n      const posts = await axios.get('http://localhost:3001/posts/my-posts/' + id);\n      return posts.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async addToFavourites(post_id, user_id) {\n    try {\n      const response = await axios.post('http://localhost:3001/post_favourites/create', {\n        post_id,\n        user_id\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deleteFromFavourites(id) {\n    try {\n      const response = await axios.delete('http://localhost:3001/post_favourites/' + id);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async addPost(data) {\n    try {\n      const response = await axios.get('http://localhost:3001/posts/create', data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async updatePost(post_id, data) {\n    try {\n      const response = await axios.put('http://localhost:3001/posts/update' + post_id, data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deletePost(post_id) {\n    try {\n      const response = await axios.delete('http://localhost:3001/posts/' + post_id);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getPost(id) {\n    try {\n      const response = await axios.get('http://localhost:3001/posts/' + id);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}","map":{"version":3,"names":["axios","Service","getLostAnimals","data","posts","get","params","error","console","log","getFoundAnimals","getPersonalData","id","cookieValue","document","cookie","split","map","find","_ref","key","value","trim","token","config","headers","Authorization","response","deleteUser","_ref2","delete","alert","message","updatePersonalData","getMyFavourites","favourites","getMyPosts","addToFavourites","post_id","user_id","post","deleteFromFavourites","addPost","updatePost","put","deletePost","getPost"],"sources":["D:/lb2/my-app/src/API/Service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport default class Service {\r\n\r\n\r\n\r\n    \r\n    static async getLostAnimals(data) {\r\n        try {\r\n            const posts = await axios.get('http://localhost:3001/posts/', { params: data })\r\n            return posts.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getFoundAnimals(data) {\r\n        try {\r\n            const posts = await axios.get('http://localhost:3001/posts/', { params: data })\r\n            return posts.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getPersonalData(id) {\r\n        const cookieValue = document.cookie\r\n        .split(';')\r\n        .map(cookie => cookie.split('='))\r\n        .find(([key, value]) => key.trim() === 'token');\r\n        const token = cookieValue ? cookieValue[1] : null;\r\n        try {\r\n            const config = {\r\n                headers: { Authorization: `${token}` }\r\n            }\r\n            const response = await axios.get('http://localhost:3001/users/' + id)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    static async deleteUser(id) {\r\n\r\n        const cookieValue = document.cookie\r\n        .split(';')\r\n        .map(cookie => cookie.split('='))\r\n        .find(([key, value]) => key.trim() === 'token');\r\n        const token = cookieValue ? cookieValue[1] : null;\r\n\r\n        try {\r\n            const config = {\r\n                headers: { Authorization: `${token}` }\r\n            }\r\n            const response = await axios.delete('http://localhost:3001/users/delete/' + id, config)\r\n            alert(response.data.message)\r\n            document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'; // Delete the token cookie\r\n            document.cookie = 'user_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n            return response.data.message\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    static async updatePersonalData(id, data) {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/users/update' + id, data)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getMyFavourites(id) {\r\n        try {\r\n            const favourites = await axios.get('http://localhost:3001/post_favourites/my-favourites/' + id)\r\n            return favourites.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getMyPosts(id) {\r\n        try {\r\n            const posts = await axios.get('http://localhost:3001/posts/my-posts/' + id)\r\n            return posts.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    static async addToFavourites(post_id, user_id) {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/post_favourites/create', { post_id, user_id })\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async deleteFromFavourites(id) {\r\n        try {\r\n            const response = await axios.delete('http://localhost:3001/post_favourites/' + id)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async addPost(data) {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/posts/create', data)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async updatePost(post_id, data) {\r\n        try {\r\n            const response = await axios.put('http://localhost:3001/posts/update' + post_id, data)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async deletePost(post_id) {\r\n        try {\r\n            const response = await axios.delete('http://localhost:3001/posts/' + post_id)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getPost(id) {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/posts/' + id)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
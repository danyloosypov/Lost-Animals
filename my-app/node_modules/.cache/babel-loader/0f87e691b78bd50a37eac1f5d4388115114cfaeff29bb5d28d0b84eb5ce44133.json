{"ast":null,"code":"var _jsxFileName = \"D:\\\\lb2\\\\my-app\\\\src\\\\pages\\\\LostPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from '../partials/Sidebar';\nimport Service from '../API/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LostPage = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [location, setLocation] = useState(\"\");\n  const [animal_species, setSpecies] = useState(\"\");\n  const [animal_color, setColor] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [animal_gender, setGender] = useState(\"\");\n  useEffect(() => {\n    const queryParams = [];\n    if (location) {\n      queryParams.push(`location=${location}`);\n    }\n    if (animal_species) {\n      queryParams.push(`animal_species=${animal_species}`);\n    }\n    if (animal_color) {\n      queryParams.push(`animal_color=${animal_color}`);\n    }\n    if (description) {\n      queryParams.push(`description=${description}`);\n    }\n    if (animal_gender) {\n      queryParams.push(`animal_gender=${animal_gender}`);\n    }\n    const queryString = queryParams.join(\"&\");\n    console.log(queryString);\n    const url = `/posts?${queryString}`;\n    fetch(url).then(res => {\n      res.json();\n    }).then(data => {\n      setPosts(data);\n      console.log(data);\n    }).catch(err => console.error(err));\n  }, [location, animal_species, animal_color, description, animal_gender]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '1',\n        padding: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(LostPage, \"EuF3TZf6abQGfi1M4P9/X+Mm96M=\");\n_c = LostPage;\nexport default LostPage;\nvar _c;\n$RefreshReg$(_c, \"LostPage\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","Service","jsxDEV","_jsxDEV","LostPage","_s","posts","setPosts","location","setLocation","animal_species","setSpecies","animal_color","setColor","description","setDescription","animal_gender","setGender","queryParams","push","queryString","join","console","log","url","fetch","then","res","json","data","catch","err","error","style","display","height","children","fileName","_jsxFileName","lineNumber","columnNumber","flex","padding","map","post","title","id","_c","$RefreshReg$"],"sources":["D:/lb2/my-app/src/pages/LostPage.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Sidebar from '../partials/Sidebar';\r\nimport Service from '../API/Service'\r\n\r\n\r\nconst LostPage = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [location, setLocation] = useState(\"\");\r\n  const [animal_species, setSpecies] = useState(\"\");\r\n  const [animal_color, setColor] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [animal_gender, setGender] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const queryParams = [];\r\n    if (location) {\r\n      queryParams.push(`location=${location}`);\r\n    }\r\n    if (animal_species) {\r\n      queryParams.push(`animal_species=${animal_species}`);\r\n    }\r\n    if (animal_color) {\r\n      queryParams.push(`animal_color=${animal_color}`);\r\n    }\r\n    if (description) {\r\n      queryParams.push(`description=${description}`);\r\n    }\r\n    if (animal_gender) {\r\n      queryParams.push(`animal_gender=${animal_gender}`);\r\n    }\r\n  \r\n    const queryString = queryParams.join(\"&\");\r\n\r\n    console.log(queryString)\r\n  \r\n    const url = `/posts?${queryString}`;\r\n    fetch(url)\r\n      .then((res) => {res.json()})\r\n      .then((data) => {setPosts(data); console.log(data)})\r\n      .catch((err) => console.error(err));\r\n  }, [location, animal_species, animal_color, description, animal_gender]);\r\n\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100%' }}>\r\n      {/* Sidebar component */}\r\n      <Sidebar/>\r\n\r\n      <div style={{ flex: '1', padding: '2rem' }}>\r\n        {/* Page content */}\r\n        <h1>Lost</h1>\r\n        {posts.map((post) => (\r\n        <div key={post.id}>\r\n          <h3>{post.title}</h3>\r\n          <p>{post.description}</p>\r\n        </div>\r\n      ))}\r\n        {/* Add other page content here */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LostPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from 'axios';\nexport default class Service {\n  static getToken() {\n    const cookieValue = document.cookie.split(';').map(cookie => cookie.split('=')).find(_ref => {\n      let [key, value] = _ref;\n      return key.trim() === 'token';\n    });\n    const token = cookieValue ? cookieValue[1] : null;\n    return token;\n  }\n  static getConfig() {\n    const token = Service.getToken();\n    return {\n      headers: {\n        Authorization: `${token}`\n      }\n    };\n  }\n  static async getLostAnimals(data) {\n    try {\n      const posts = await axios.get('http://localhost:3001/posts/', {\n        params: data\n      });\n      return posts.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getUsers() {\n    try {\n      const users = await axios.get('http://localhost:3001/users/', Service.getConfig());\n      return users.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deleteUserFromAdmin(id) {\n    try {\n      const users = await axios.delete('http://localhost:3001/users/delete/' + id, Service.getConfig());\n      return users.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getAnimals() {\n    try {\n      const animals = await axios.get('http://localhost:3001/animals/', Service.getConfig());\n      return animals.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async addAnimal(data) {\n    try {\n      const animals = await axios.post('http://localhost:3001/animals/create', data, Service.getConfig());\n      return animals.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deleteAnimal(id) {\n    try {\n      const animals = await axios.delete('http://localhost:3001/animals/delete/' + id, Service.getConfig());\n      return animals.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getFoundAnimals(data) {\n    try {\n      const posts = await axios.get('http://localhost:3001/posts/', {\n        params: data\n      });\n      return posts.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getPersonalData(id) {\n    try {\n      const response = await axios.get('http://localhost:3001/users/' + id, Service.getConfig());\n      console.log(\"sdfsfs\", response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deleteUser(id) {\n    try {\n      const response = await axios.delete('http://localhost:3001/users/delete/' + id, Service.getConfig());\n      alert(response.data.message);\n      document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'; // Delete the token cookie\n      document.cookie = 'user_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n      return response.data.message;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async updatePersonalData(id, data) {\n    try {\n      const response = await axios.put('http://localhost:3001/users/update/' + id, data, Service.getConfig());\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getMyFavourites(id) {\n    try {\n      const favourites = await axios.get('http://localhost:3001/post_favourites/my-favourites/' + id, Service.getConfig());\n      return favourites.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getMyPosts(id) {\n    try {\n      const posts = await axios.get('http://localhost:3001/posts/my-posts/' + id, Service.getConfig());\n      return posts.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async addToFavourites(post_id, user_id) {\n    try {\n      const response = await axios.post('http://localhost:3001/post_favourites/create', {\n        post_id,\n        user_id\n      }, Service.getConfig());\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deleteFromFavourites(post_id, user_id) {\n    try {\n      const response = await axios.delete(`http://localhost:3001/post_favourites/${post_id}/${user_id}`, Service.getConfig());\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async addPost(data) {\n    try {\n      const response = await axios.post('http://localhost:3001/posts/create', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          ...Service.getConfig().headers\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async updatePost(post_id, data) {\n    try {\n      const response = await axios.put('http://localhost:3001/posts/update/' + post_id, data, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          ...Service.getConfig().headers\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async deletePost(post_id) {\n    try {\n      const response = await axios.delete('http://localhost:3001/posts/delete/' + post_id, Service.getConfig());\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  static async getPost(id) {\n    try {\n      const response = await axios.get('http://localhost:3001/posts/' + id);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}","map":{"version":3,"names":["axios","Service","getToken","cookieValue","document","cookie","split","map","find","_ref","key","value","trim","token","getConfig","headers","Authorization","getLostAnimals","data","posts","get","params","error","console","log","getUsers","users","deleteUserFromAdmin","id","delete","getAnimals","animals","addAnimal","post","deleteAnimal","getFoundAnimals","getPersonalData","response","deleteUser","alert","message","updatePersonalData","put","getMyFavourites","favourites","getMyPosts","addToFavourites","post_id","user_id","deleteFromFavourites","addPost","updatePost","deletePost","getPost"],"sources":["D:/lb2/my-app/src/API/Service.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport default class Service {\r\n\r\n\r\n    static getToken() {\r\n        const cookieValue = document.cookie\r\n        .split(';')\r\n        .map(cookie => cookie.split('='))\r\n        .find(([key, value]) => key.trim() === 'token');\r\n        const token = cookieValue ? cookieValue[1] : null;\r\n        return token;\r\n    }\r\n    \r\n    static getConfig() {\r\n        const token = Service.getToken();\r\n        return {\r\n            headers: { Authorization: `${token}` }\r\n        };\r\n    }\r\n\r\n    static async getLostAnimals(data) {\r\n        try {\r\n            const posts = await axios.get('http://localhost:3001/posts/', { params: data })\r\n            return posts.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getUsers() {\r\n        try {\r\n            const users = await axios.get('http://localhost:3001/users/', Service.getConfig())\r\n            return users.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async deleteUserFromAdmin(id) {\r\n        try {\r\n            const users = await axios.delete('http://localhost:3001/users/delete/' + id, Service.getConfig())\r\n            return users.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getAnimals() {\r\n        try {\r\n            const animals = await axios.get('http://localhost:3001/animals/', Service.getConfig())\r\n            return animals.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async addAnimal(data) {\r\n        try {\r\n            const animals = await axios.post('http://localhost:3001/animals/create', data, Service.getConfig())\r\n            return animals.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async deleteAnimal(id) {\r\n        try {\r\n            const animals = await axios.delete('http://localhost:3001/animals/delete/' + id, Service.getConfig())\r\n            return animals.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getFoundAnimals(data) {\r\n        try {\r\n            const posts = await axios.get('http://localhost:3001/posts/', { params: data })\r\n            return posts.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getPersonalData(id) {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/users/' + id, Service.getConfig())\r\n            console.log(\"sdfsfs\", response.data)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    static async deleteUser(id) {\r\n        try {\r\n            const response = await axios.delete('http://localhost:3001/users/delete/' + id, Service.getConfig())\r\n            alert(response.data.message)\r\n            document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:01 GMT;'; // Delete the token cookie\r\n            document.cookie = 'user_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\r\n            return response.data.message\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    static async updatePersonalData(id, data) {\r\n        try {\r\n            const response = await axios.put('http://localhost:3001/users/update/' + id, data, Service.getConfig())\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getMyFavourites(id) {\r\n        try {\r\n            const favourites = await axios.get('http://localhost:3001/post_favourites/my-favourites/' + id, Service.getConfig())\r\n            return favourites.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getMyPosts(id) {\r\n        try {\r\n            const posts = await axios.get('http://localhost:3001/posts/my-posts/' + id, Service.getConfig())\r\n            return posts.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    static async addToFavourites(post_id, user_id) {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/post_favourites/create', { post_id, user_id }, Service.getConfig())\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async deleteFromFavourites(post_id, user_id) {\r\n        try {\r\n          const response = await axios.delete(`http://localhost:3001/post_favourites/${post_id}/${user_id}`, Service.getConfig());\r\n          return response.data;\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n\r\n    static async addPost(data) {\r\n        try {\r\n            const response = await axios.post('http://localhost:3001/posts/create', data, {\r\n                headers: {\r\n                  'Content-Type': 'multipart/form-data',\r\n                  ...Service.getConfig().headers,\r\n                },\r\n            })\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async updatePost(post_id, data) {\r\n        try {\r\n            const response = await axios.put('http://localhost:3001/posts/update/' + post_id, data, {\r\n                headers: {\r\n                  'Content-Type': 'multipart/form-data',\r\n                  ...Service.getConfig().headers,\r\n                },\r\n            })\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async deletePost(post_id) {\r\n        try {\r\n            const response = await axios.delete('http://localhost:3001/posts/delete/' + post_id, Service.getConfig())\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    static async getPost(id) {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/posts/' + id)\r\n            return response.data\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}